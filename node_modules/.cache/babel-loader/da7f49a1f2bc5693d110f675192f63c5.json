{"ast":null,"code":"import _classCallCheck from \"/home/edwin/programy/CalculatorComplex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/edwin/programy/CalculatorComplex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/edwin/programy/CalculatorComplex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/edwin/programy/CalculatorComplex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/edwin/programy/CalculatorComplex/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/edwin/programy/CalculatorComplex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/edwin/programy/CalculatorComplex/src/Complex/App.js\";\nimport React, { Component } from \"react\";\nimport Keyboard from \"./Keyboard\";\nimport Signs from \"./SignsArray\";\nimport Result from \"./Result\";\nimport Screen from \"./Screen\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      number_1: {\n        real: \"0\",\n        imaginary: \"0\"\n      },\n      number_2: {\n        real: \"0\",\n        imaginary: \"0\"\n      },\n      currentInput: 3,\n      sign: \"\",\n      result: \"0\",\n      errorNumber: null\n    };\n    _this.changeValue = _this.changeValue.bind(_assertThisInitialized(_this));\n    _this.trimZero = _this.trimZero.bind(_assertThisInitialized(_this));\n    _this.saveSign = _this.saveSign.bind(_assertThisInitialized(_this));\n    _this.logujZnak = _this.logujZnak.bind(_assertThisInitialized(_this));\n    _this.count = _this.count.bind(_assertThisInitialized(_this));\n    _this.module = _this.module.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"module\",\n    value: function module() {\n      console.log(\"I'm making module\");\n    }\n  }, {\n    key: \"count\",\n    value: function count() {\n      console.log(\"I'm counting\");\n    }\n  }, {\n    key: \"logujZnak\",\n    value: function logujZnak() {\n      console.log(this.state.sign);\n    }\n  }, {\n    key: \"saveSign\",\n    value: function saveSign(val) {\n      if (val === \"=\") {\n        this.count();\n      } else {\n        switch (val) {\n          case \"‚Üê\":\n            switch (this.state.currentInput) {\n              case 1:\n                this.setState(function (prevState) {\n                  var nevVal = prevState.number_1.real.slice(-1);\n                  return {\n                    number_1: {\n                      real: nevVal\n                    }\n                  };\n                });\n                break;\n\n              case 2:\n                this.setState(function (prevState) {\n                  var nevVal = prevState.number_1.imaginary.slice(-1);\n                  return {\n                    number_1: {\n                      imaginary: nevVal\n                    }\n                  };\n                });\n                break;\n\n              case 3:\n                this.setState(function (prevState) {\n                  var nevVal = prevState.number_2.real.slice(-1);\n                  return {\n                    number_2: {\n                      real: nevVal\n                    }\n                  };\n                });\n                break;\n\n              case 4:\n                this.setState(function (prevState) {\n                  var nevVal = prevState.number_2.imaginary.slice(-1);\n                  return {\n                    number_2: {\n                      imaginary: nevVal\n                    }\n                  };\n                });\n                break;\n\n              default:\n                this.setState({\n                  errorNumber: 2\n                });\n                break;\n            }\n\n            break;\n\n          case \"%\":\n            this.module();\n            break;\n\n          default:\n            this.setState({\n              sign: val\n            });\n        }\n      }\n\n      this.logujZnak();\n    }\n  }, {\n    key: \"trimZero\",\n    value: function trimZero() {\n      switch (this.state.currentInput) {\n        case 1:\n          if (this.state.number_1.real.charAt(0) === 0 || this.state.number_1.real.charAt(0) === \"0\") {\n            this.setState(function (prevState) {\n              var nevVal = prevState.number_1.real.substr(1);\n              console.log(nevVal);\n              return {\n                number_1: {\n                  real: nevVal\n                }\n              };\n            });\n          }\n\n          break;\n\n        case 2:\n          if (this.state.number_1.imaginary.charAt(0) === 0 || this.state.number_1.imaginary.charAt(0) === \"0\") {\n            this.setState(function (prevState) {\n              var nevVal = prevState.number_1.imaginary.substr(1);\n              console.log(nevVal);\n              return {\n                number_1: {\n                  imaginary: nevVal\n                }\n              };\n            });\n          }\n\n          break;\n\n        case 3:\n          if (this.state.number_2.real.charAt(0) === 0 || this.state.number_2.real.charAt(0) === \"0\") {\n            this.setState(function (prevState) {\n              var nevVal = prevState.number_2.real.substr(1);\n              console.log(nevVal);\n              return {\n                number_2: {\n                  real: nevVal\n                }\n              };\n            });\n          }\n\n          break;\n\n        case 4:\n          if (this.state.number_2.imaginary.charAt(0) === 0 || this.state.number_2.imaginary.charAt(0) === \"0\") {\n            this.setState(function (prevState) {\n              var nevVal = prevState.number_2.imaginary.substr(1);\n              console.log(nevVal);\n              return {\n                number_2: {\n                  imaginary: nevVal\n                }\n              };\n            });\n          }\n\n          break;\n\n        default:\n          this.setState({\n            errorNumber: 0\n          });\n          console.log(\"Error numer: 0\");\n          break;\n      }\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(e) {\n      this.trimZero();\n      var val = e.target.innerHTML;\n      var specialSign;\n\n      function test(a) {\n        if (a === val) {\n          specialSign = \"yes\";\n          return specialSign;\n        }\n      }\n\n      for (var i = 0; i < Signs.length; i++) {\n        test(Signs[i]);\n      }\n\n      if (specialSign === \"yes\") {\n        this.saveSign(val);\n      } else {\n        switch (this.state.currentInput) {\n          case 1:\n            this.setState(function (prevState) {\n              var nevVal = prevState.number_1.real + \"\" + val;\n              return {\n                number_1: {\n                  real: nevVal\n                }\n              };\n            });\n            break;\n\n          case 2:\n            this.setState(function (prevState) {\n              var nevVal = prevState.number_1.imaginary + \"\" + val;\n              return {\n                number_1: {\n                  imaginary: nevVal\n                }\n              };\n            });\n            break;\n\n          case 3:\n            this.setState(function (prevState) {\n              var nevVal = prevState.number_2.real + \"\" + val;\n              return {\n                number_2: {\n                  real: nevVal\n                }\n              };\n            });\n            break;\n\n          case 4:\n            this.setState(function (prevState) {\n              var nevVal = prevState.number_2.imaginary + \"\" + val;\n              return {\n                number_2: {\n                  imaginary: nevVal\n                }\n              };\n            });\n            break;\n\n          default:\n            this.setState({\n              errorNumber: 0\n            });\n            console.log(\"Error numer: 1\");\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Pierwszy reactowy kalkulator liczb zespolonych\"), React.createElement(Screen, {\n        n1r: this.state.number_1.real,\n        n1i: this.state.number_1.imaginary,\n        n2r: this.state.number_2.real,\n        n2i: this.state.number_2.imaginary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(Keyboard, {\n        function: this.changeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(Result, {\n        result: this.state.result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n/* Error numbers \r\n\r\n0 - Trimming problem function trimZero\r\n1 - Changing value problem function changeValue\r\n\r\n*/","map":{"version":3,"sources":["/home/edwin/programy/CalculatorComplex/src/Complex/App.js"],"names":["React","Component","Keyboard","Signs","Result","Screen","App","state","number_1","real","imaginary","number_2","currentInput","sign","result","errorNumber","changeValue","bind","trimZero","saveSign","logujZnak","count","module","console","log","val","setState","prevState","nevVal","slice","charAt","substr","e","target","innerHTML","specialSign","test","a","i","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Keyboard from \"./Keyboard\";\r\nimport Signs from \"./SignsArray\";\r\nimport Result from \"./Result\";\r\nimport Screen from \"./Screen\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      number_1: {\r\n        real: \"0\",\r\n        imaginary: \"0\"\r\n      },\r\n      number_2: {\r\n        real: \"0\",\r\n        imaginary: \"0\"\r\n      },\r\n      currentInput: 3,\r\n      sign: \"\",\r\n      result: \"0\",\r\n      errorNumber: null\r\n    };\r\n    this.changeValue = this.changeValue.bind(this);\r\n    this.trimZero = this.trimZero.bind(this);\r\n    this.saveSign = this.saveSign.bind(this);\r\n    this.logujZnak = this.logujZnak.bind(this);\r\n    this.count = this.count.bind(this);\r\n    this.module = this.module.bind(this);\r\n  }\r\n  module(){\r\n    console.log(\"I'm making module\");\r\n  }\r\n  count(){\r\n    console.log(\"I'm counting\");\r\n  }\r\n  logujZnak(){\r\n    console.log(this.state.sign);\r\n  }\r\n  saveSign(val){\r\n    if (val === \"=\"){\r\n      this.count();\r\n      } else {\r\n        switch(val){\r\n          case \"‚Üê\":\r\n            switch(this.state.currentInput){\r\n              case 1:\r\n                this.setState(prevState => {\r\n                  let nevVal = prevState.number_1.real.slice(-1);\r\n                  return {\r\n                    number_1: {\r\n                      real: nevVal\r\n                    }\r\n                  }\r\n                })\r\n              break;\r\n              case 2:\r\n                this.setState(prevState => {\r\n                  let nevVal = prevState.number_1.imaginary.slice(-1);\r\n                  return {\r\n                    number_1: {\r\n                      imaginary: nevVal\r\n                    }\r\n                  }\r\n                })\r\n              break;\r\n              case 3:\r\n                this.setState(prevState => {\r\n                  let nevVal = prevState.number_2.real.slice(-1);\r\n                  return {\r\n                    number_2: {\r\n                      real: nevVal\r\n                    }\r\n                  }\r\n                })\r\n              break;\r\n              case 4:\r\n                this.setState(prevState => {\r\n                  let nevVal = prevState.number_2.imaginary.slice(-1);\r\n                  return {\r\n                    number_2: {\r\n                      imaginary: nevVal\r\n                    }\r\n                  }\r\n                })\r\n              break;\r\n              default:\r\n                this.setState({\r\n                  errorNumber: 2\r\n                });\r\n              break;\r\n            }\r\n          break;\r\n          case \"%\":\r\n          this.module();\r\n          break;\r\n          default:\r\n            this.setState({\r\n              sign: val\r\n            });\r\n        }\r\n      }\r\n    this.logujZnak();\r\n  }\r\n  trimZero(){\r\n    switch(this.state.currentInput){\r\n      case 1:\r\n        if((this.state.number_1.real.charAt(0) === 0) || this.state.number_1.real.charAt(0) === \"0\"){\r\n          this.setState(prevState => {\r\n            let nevVal = prevState.number_1.real.substr(1);\r\n            console.log(nevVal);\r\n            return {\r\n              number_1: {\r\n                real: nevVal\r\n              }\r\n            }\r\n          })\r\n        }\r\n        break;\r\n        case 2:\r\n        if((this.state.number_1.imaginary.charAt(0) === 0) || this.state.number_1.imaginary.charAt(0) === \"0\"){\r\n          this.setState(prevState => {\r\n            let nevVal = prevState.number_1.imaginary.substr(1);\r\n            console.log(nevVal);\r\n            return {\r\n              number_1: {\r\n                imaginary: nevVal\r\n              }\r\n            }\r\n          })\r\n        }\r\n        break;\r\n        case 3:\r\n        if((this.state.number_2.real.charAt(0) === 0) || this.state.number_2.real.charAt(0) === \"0\"){\r\n          this.setState(prevState => {\r\n            let nevVal = prevState.number_2.real.substr(1);\r\n            console.log(nevVal);\r\n            return {\r\n              number_2: {\r\n                real: nevVal,\r\n              }\r\n            }\r\n          });\r\n        }\r\n        break;\r\n        case 4:\r\n        if((this.state.number_2.imaginary.charAt(0) === 0) || this.state.number_2.imaginary.charAt(0) === \"0\"){\r\n          this.setState(prevState => {\r\n            let nevVal = prevState.number_2.imaginary.substr(1);\r\n            console.log(nevVal);\r\n            return {\r\n              number_2: {\r\n                imaginary: nevVal\r\n              }\r\n            }\r\n          })\r\n        }\r\n        break;\r\n        default:\r\n          this.setState({\r\n            errorNumber: 0\r\n          });\r\n          console.log(\"Error numer: 0\");\r\n        break;\r\n    }\r\n  }\r\n\r\n  changeValue(e){\r\n    this.trimZero();\r\n    let val = e.target.innerHTML;\r\n    let specialSign;\r\n    function test(a){\r\n      if (a === val){\r\n        specialSign = \"yes\";\r\n        return specialSign;\r\n      } \r\n    }\r\n    for (let i=0; i < Signs.length; i++){\r\n      test(Signs[i]);\r\n    }\r\n    if (specialSign === \"yes\" ){\r\n      this.saveSign(val);\r\n    } else {\r\n    switch(this.state.currentInput){\r\n      case 1:\r\n        this.setState(prevState => {\r\n          let nevVal = prevState.number_1.real + \"\" + val;\r\n          return {\r\n            number_1: {\r\n              real: nevVal\r\n          }\r\n        }\r\n      });\r\n      break;\r\n      case 2:\r\n        this.setState(prevState => {\r\n          let nevVal = prevState.number_1.imaginary + \"\" + val;\r\n          return {\r\n            number_1: {\r\n              imaginary: nevVal\r\n          }\r\n        }\r\n      });\r\n      break;\r\n      case 3:\r\n        this.setState(prevState => {\r\n          let nevVal = prevState.number_2.real + \"\" + val;\r\n          return {\r\n            number_2: {\r\n              real: nevVal\r\n          }\r\n        }\r\n      });\r\n      break;\r\n      case 4:\r\n        this.setState(prevState => {\r\n          let nevVal = prevState.number_2.imaginary + \"\" + val;\r\n          return {\r\n            number_2: {\r\n              imaginary: nevVal\r\n          }\r\n        }\r\n      });\r\n      break;\r\n      default:\r\n          this.setState({\r\n            errorNumber: 0\r\n          });\r\n          console.log(\"Error numer: 1\");\r\n        break;\r\n    }\r\n  }\r\n}\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Pierwszy reactowy kalkulator liczb zespolonych</h1>\r\n        <Screen n1r={this.state.number_1.real} n1i={this.state.number_1.imaginary} n2r={this.state.number_2.real} n2i={this.state.number_2.imaginary}>\r\n        </Screen>\r\n        <Keyboard function={this.changeValue} />\r\n        <Result result={this.state.result} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/* Error numbers \r\n\r\n0 - Trimming problem function trimZero\r\n1 - Changing value problem function changeValue\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}